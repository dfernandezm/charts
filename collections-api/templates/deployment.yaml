apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
  minReadySeconds: 10
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /_status
              port: 8080
            initialDelaySeconds: 5
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          env:
            - name: "ENV"
              value: {{ .Values.env }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/key.json
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: google-cloud-keys
            mountPath: /var/secrets/google
      volumes:
        - name: google-cloud-keys
          secret:
            secretName: firestore-key #Â secret manually created, see instructions at gcp-config-connector/README.md

          resources:
            limits:
              cpu: 1
              memory: 500Mi
            requests:
              cpu: 250m
              memory: 200Mi
        
      nodeSelector:
        cloud.google.com/gke-nodepool: "{{ .Values.project }}-{{ .Values.env }}-elasticsearch-pool"
