apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
  minReadySeconds: 10
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /.well-known/apollo/server-health
              port: 4000
            initialDelaySeconds: 5
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          env:
            - name: "ENV"
              value: "{{ .Values.env }}"
            - name: "COLLECTIONS_API_HOST"
              value: "collections-api"
            - name: "FIREBASE_API_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.firebase.secretName }}
                  key: {{ .Values.firebase.secretKey }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/var/secrets/google/{{ .Values.saSecretName }}.json"
          volumeMounts:
           - name:  google-cloud-keys
             mountPath: "/var/secrets/google"
             readOnly: true
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
      volumes:
        - name: google-cloud-keys
          secret:
            secretName: {{ .Values.saSecretName }} #Â secret created with myiac, see help
            
      resources:
        limits:
          cpu: 400m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 100Mi

      nodeSelector:
        cloud.google.com/gke-nodepool: "{{ .Values.project }}-{{ .Values.env }}-applications-pool"
